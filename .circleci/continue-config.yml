version: 2.1

parameters:
  build-code:
    type: boolean
    default: false
  build-eks:
    type: boolean
    default: false

jobs:
  infra:
    docker:
      - image: amazon/aws-cli:latest
    steps:
      - checkout
      - run:
          name: update eks cluster
          command: |
            echo "Updating eks cluster..."
            # aws cloudformation deploy --stack-name eks --region us-east-2 --template-body file://eks/eks.yml --capabilities CAPABILITY_NAMED_IAM
            aws cloudformation deploy --stack-name eks --region us-east-2 --template-file eks/eks.yml --capabilities CAPABILITY_NAMED_IAM
  
  build-app:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 
            chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  build-docker:
    docker:
    - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: build and push image
          command: |
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 145648833137.dkr.ecr.us-east-2.amazonaws.com
            docker build -t project5 .
            docker tag project5:latest 145648833137.dkr.ecr.us-east-2.amazonaws.com/project5:latest
            docker push 145648833137.dkr.ecr.us-east-2.amazonaws.com/project5:latest
  deploy:
    docker:
      - image: cimg/aws:2022.09
    steps:
      - checkout
      - run:
          name: update kubectl config
          command: |
            aws eks update-kubeconfig --region us-east-2 --name ekscluster
      - run:
          name: deploy image to eks cluster
          command: |
            kubectl apply -f green-deployment.yml
workflows:
  build-infra:
    when: << pipeline.parameters.build-eks >>
    jobs:
      - infra
  build-docker:
    when: << pipeline.parameters.build-docker >>
  build-app:
    jobs:
      - build
      - deploy:
         requires: 
           - build
         filters:
           branches:
             only: master
